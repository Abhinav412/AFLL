
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ifDIVIDE ELSE IF LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN TIMESif : IF LPAREN exp RPAREN LBRACE stmt RBRACE\n          | IF LPAREN exp RPAREN LBRACE stmt RBRACE ELSE LBRACE stmt RBRACEexp : exp PLUS term\n           | exp MINUS term\n           | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBERstmt : exp'
    
_lr_action_items = {'IF':([0,],[2,]),'$end':([1,20,24,],[0,-1,-2,]),'LPAREN':([2,],[3,]),'NUMBER':([3,9,10,11,12,13,22,],[7,7,7,7,7,7,7,]),'RPAREN':([4,5,6,7,14,15,16,17,],[8,-5,-8,-9,-3,-4,-6,-7,]),'PLUS':([4,5,6,7,14,15,16,17,18,],[9,-5,-8,-9,-3,-4,-6,-7,9,]),'MINUS':([4,5,6,7,14,15,16,17,18,],[10,-5,-8,-9,-3,-4,-6,-7,10,]),'RBRACE':([5,6,7,14,15,16,17,18,19,23,],[-5,-8,-9,-3,-4,-6,-7,-10,20,24,]),'TIMES':([5,6,7,14,15,16,17,],[11,-8,-9,11,11,-6,-7,]),'DIVIDE':([5,6,7,14,15,16,17,],[12,-8,-9,12,12,-6,-7,]),'LBRACE':([8,21,],[13,22,]),'ELSE':([20,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'if':([0,],[1,]),'exp':([3,13,22,],[4,18,18,]),'term':([3,9,10,13,22,],[5,14,15,5,5,]),'factor':([3,9,10,11,12,13,22,],[6,6,6,16,17,6,6,]),'stmt':([13,22,],[19,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> if","S'",1,None,None,None),
  ('if -> IF LPAREN exp RPAREN LBRACE stmt RBRACE','if',7,'p_if','if.py',10),
  ('if -> IF LPAREN exp RPAREN LBRACE stmt RBRACE ELSE LBRACE stmt RBRACE','if',11,'p_if','if.py',11),
  ('exp -> exp PLUS term','exp',3,'p_exp','if.py',20),
  ('exp -> exp MINUS term','exp',3,'p_exp','if.py',21),
  ('exp -> term','exp',1,'p_exp','if.py',22),
  ('term -> term TIMES factor','term',3,'p_term','if.py',32),
  ('term -> term DIVIDE factor','term',3,'p_term','if.py',33),
  ('term -> factor','term',1,'p_term','if.py',34),
  ('factor -> NUMBER','factor',1,'p_factor','if.py',44),
  ('stmt -> exp','stmt',1,'p_stmt','if.py',48),
]
